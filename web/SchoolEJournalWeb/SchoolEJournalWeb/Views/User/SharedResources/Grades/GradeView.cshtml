@{
	ViewData["Title"] = "Oceny";
}
<h2>Oceny</h2>
@{
	@using SchoolEJournalWeb.Encryption
	@using SchoolEJournalWeb.ViewModels

	UserType userType = (UserType)ViewData["UserType"];
	switch (userType)
	{
		case UserType.Student:
			Dictionary<string, List<StudentGradeView>> gradeData = (Dictionary<string, List<StudentGradeView>>)ViewData["GradeData"];
			<table class="table bg-primary">
				<tbody>
					@foreach (var entry in gradeData)
					{
						<tr>
							<th>@entry.Key</th>
							@foreach (var grade in entry.Value)
							{
								<td>@($"{grade.GradeGroupName}: {grade.Value} (Waga: {grade.Weight})")</td>
							}
						</tr>
					}
				</tbody>
			</table>
			break;
		case UserType.Teacher:
			Dictionary<Subject, List<TeacherGradeGroupView>> data = (Dictionary<Subject, List<TeacherGradeGroupView>>)ViewData["GradeData"];
			foreach(var entry in data)
			{
				@($"{entry.Key.SubjectName} ({entry.Key.Class.ClassName})")
				<ul>
					@foreach(var group in entry.Value)
					{
						<li>
							@group.GradeGroupName
							@Html.ActionLink("Szczegóły", "InspectGradeGroup", "Grade", group)
							@Html.ActionLink("Usuń", "DeleteGradeGroup", "Grade", group)
						</li>
					}
				<li>
					@Html.ActionLink("Nowa grupa ocen...", "CreateNewGradeGroup", "Grade", new { subjectId = entry.Key.SubjectId })
				</li>
				</ul>
			}
			break;
	}
}